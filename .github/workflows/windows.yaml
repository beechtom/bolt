name: Windows build

on: [push]

env:
  BOLT_WINRM_USER: roddypiper
  BOLT_WINRM_HOST: localhost
  BOLT_WINRM_PORT: 5985
  BOLT_WINRM_SSL_PORT: 5986
  BOLT_WINRM_SMB_PORT: 445
  RUBY_VERSION: 25-x64
  
jobs:

  agentful:
    name: Agentful
    runs-on: windows-latest
    env:
      APPVEYOR_AGENTS: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.5.x
      - name: Cache gems
        id: gems
        uses: actions/cache@v1
        with:
          path: .bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile') }}
      - name: Cache modules
        id: modules
        uses: actions/cache@v1
        with:
          path: modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/Puppetfile') }}
      - name: Install bundler
        run: |
          gem install bundler
          bundle config --local path .bundle
      - name: Install gems
        if: steps.gems.outputs.cache-hit != 'true'
        run: bundle install --jobs 4 --retry 3
      - name: Install modules
        if: steps.modules.outputs.cache-hit != 'true'
        run: bundle exec r10k puppetfile install
      - name: Pre-test setup
        shell: powershell
        run: |
          . scripts\ci.ps1
          Set-ActiveRubyFromPuppet
      - name: Run tests
        shell: powershell
        run: bundle exec rake integration:appveyor_agents

  agentless:
    name: Agentless
    runs-on: windows-latest
    env:
      BOLT_WINDOWS: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.5.x
      - name: Cache gems
        id: gems
        uses: actions/cache@v1
        with:
          path: .bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile') }}
      - name: Cache modules
        id: modules
        uses: actions/cache@v1
        with:
          path: modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/Puppetfile') }}
      - name: Install bundler
        run: |
          gem install bundler
          bundle config --local path .bundle
      - name: Install gems
        if: steps.gems.outputs.cache-hit != 'true'
        run: bundle install --jobs 4 --retry 3
      - name: Install modules
        if: steps.modules.outputs.cache-hit != 'true'
        run: bundle exec r10k puppetfile install
      - name: Pre-test setup
        shell: powershell
        run: '& scripts\ci.ps1'
      - name: Run tests
        shell: powershell
        run: bundle exec rspec spec/integration/puppetfile_spec.rb:60

  # agentless:
  #   name: Agentless
  #   runs-on: windows-latest
  #   env:
  #     BOLT_WINDOWS: true
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v1
  #     - name: Setup Ruby
  #       uses: actions/setup-ruby@v1
  #       with:
  #         ruby-version: '2.5.x'
  #     - name: Cache gems
  #       id: cache
  #       uses: actions/cache@v1
  #       with:
  #         path: vendor/bundle
  #         key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile') }}
  #     - name: Install bundler
  #       run: |
  #         gem install bundler
  #         bundle config path vendor/bundle
  #     - name: Install gems
  #       if: steps.cache.outputs.cache-hit != 'true'
  #       run: bundle install --jobs 4 --retry 3
  #     - name: Pre-test setup
  #       shell: powershell
  #       run: |
  #         . .\ci.ps1
  #         Install-Puppetfile
  #         $pass = New-RandomPassword
  #         $user = @{ UserName = $ENV:BOLT_WINRM_USER; Password = $pass }
  #         New-LocalAdmin @user
  #         Set-WinRMHostConfiguration
  #         Test-WinRMConfiguration @user | Out-Null
  #         Write-Output "::set-env name=BOLT_WINRM_PASSWORD::$pass"
  #     - name: Run tests
  #       shell: powershell
  #       run: bundle exec rake appveyor
  #     - name: Post-test checks
  #       shell: powershell
  #       run: |
  #         $test_fail = 0
  #         $mods = ("boltlib", "ctrl", "file", "out", "system")
  #         Get-ChildItem bolt-modules -Directory -Include $mods | foreach {
  #           cd $_.FullName;
  #           $test_output = bundle exec rake spec
  #           $r = $LASTEXITCODE
  #           Write-Output $test_output
  #           if($r) {
  #             $test_fail = $r
  #           }
  #         }
  #         if($test_fail) { throw "core module tests failed" }
  #         cd ../..